@mixin kast-button {
  .ko-button {
    @include button($style: none);
    text-decoration: none;

    // Sizes
    @each $size, $value in map-remove($button-sizes, default) {
      &.#{$size} {
        font-size: $value;
      }
    }

    &--expand {
      @include button-expand;
    }

    @if $button-responsive-expanded {
      @each $size in $breakpoint-classes {
        @include breakpoint(#{$size} only) {
          &.#{$size}-only-expanded {
            @include button-expand;
          }
        }
        @if $size != $-zf-zero-breakpoint {
          @include breakpoint(#{$size} down) {
            &.#{$size}-down-expanded {
              @include button-expand;
            }
          }

          @include breakpoint(#{$size}) {
            &.#{$size}-expanded {
              @include button-expand;
            }
          }
        }
      }
    }

    // Solid, hollow & clear styles
    @each $filling in (solid hollow clear) {
      $selector: if($button-fill == $filling, null, ".ko-button--#{$filling}");

      &#{$selector} {
        @include button-fill($filling);
        @include button-fill-style($filling);

        @each $name, $color in $button-palette {
          &.ko-button--#{$name} {
            @include button-fill-style($filling, $color, auto, auto);
          }
        }
      }
    }

    // Disabled state
    &--disabled,
    &[disabled] {
      @include button-disabled;
      background-color: #eef2f1;
      color: #768281;

      &:hover {
        background-color: #eef2f1;
        color: #768281;
      }
    }

    // Dropdown arrow
    &.dropdown {
      @include button-dropdown;

      @if $button-fill == hollow {
        &::after {
          border-top-color: $button-background;
        }
      }
      .ko-button {
        &--hollow,
        &--clear {
          &::after {
            border-top-color: $button-background;
          }

          @each $name, $color in $button-palette {
            &.#{$name} {
              &::after {
                border-top-color: $color;
              }
            }
          }
        }
      }
    }

    // Button with dropdown arrow only
    &.arrow-only::after {
      top: -0.1em;
      float: none;
      margin-#{$global-left}: 0;
    }

    &--right {
      background-image: url(../img/chevron-right.svg);
      background-position: 100% 50%;
      background-repeat: no-repeat;
    }

    &--working {
      $circle-height: rem-calc(22);

      background-color: $kast-white;
      color: #768281;
      font-weight: $global-weight-normal;
      position: relative;
      padding-left: rem-calc(16) + $circle-height;

      &:visited,
      &:hover,
      &:visited {
        background-color: $kast-white;
        color: #768281;
        cursor: default;
      }

      &::before {
        content: "";
        display: inline-block;
        position: absolute;
        border-radius: 50%;
        width: $circle-height;
        height: $circle-height;
        border: transparent 3px solid;
        border-right-color: $kast-green;
        border-bottom-color: $kast-green;
        transform: rotate(360deg);
        animation: turning_cw 1s infinite;
        left: rem-calc(8);
        top: 50%;
        margin-top: $circle-height * -0.5;
      }
    }

    &--confirmed {
      $bgColor: #eef2f1;
      position: relative;
      background: $bgColor linear-gradient(#cad7d5, #cad7d5) no-repeat rem-calc(30) center/1px 50%;
      color: $dark-gray;
      font-weight: 400;
      padding-left: rem-calc(40);
      cursor: auto;

      //@include kast-icon($ki-check);

      &::before {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: rem-calc(8);
      }

      &:hover,
      &:focus,
      &:active {
        background-color: $bgColor;
        color: inherit;
        cursor: default;
      }
    }
  }

  .ko-close {
    @include button-base;
    font-weight: $global-weight-normal;
    color: #768281;
    padding-left: 0;
    padding-right: 0;
    margin-bottom: 0;

    &:before {
      content: "\00D7";
      font-size: 168%;
      float: left;
      line-height: rem-calc(14);
      position: relative;
      top: rem-calc(-1);
      margin-right: rem-calc(2);
    }
  }

  a.ko-button {
    // sass-lint:disable-line no-qualifying-elements
    &:hover,
    &:focus {
      text-decoration: none;
    }
  }

  @keyframes turning_cw {
    0% {
      -webkit-transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(360deg);
    }
  }
}
